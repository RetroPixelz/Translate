{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/Translator/translator/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const API = \"https://api.mymemory.translated.net/get\";\n  const [translate, setTranslate] = useState(''); // Corrected state declaration\n  const [translated, setTranslated] = useState(''); // Corrected state declaration\n\n  const {\n    lang,\n    setLang\n  } = useState('');\n  const {\n    toLang,\n    setToLang\n  } = useState('');\n  const translateOptions = [{\n    value: '',\n    label: 'option 1'\n  }, {\n    value: '',\n    label: 'option 2'\n  }, {\n    value: '',\n    label: 'option 3'\n  }, {\n    value: '',\n    label: 'option 4'\n  }];\n  const translateText = async () => {\n    try {\n      const response = await axios.get(API, {\n        params: {\n          q: translate,\n          langpair: 'en|es' // Replace with your desired language pair (e.g., 'en|fr' for English to French)\n        }\n      });\n\n      if (response.data && response.data.responseData) {\n        const translated = response.data.responseData.translatedText;\n        setTranslated(translated);\n      } else {\n        setTranslated('Translation not found');\n      }\n    } catch (error) {\n      console.error('Error translating text:', error);\n      setTranslated('An error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainTranslatorBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"translator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toTranslate\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: translateText,\n              children: \"Translate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Enter your text here:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"textInput\",\n              type: \"text\",\n              placeholder: \"Enter text to translate\",\n              value: translate,\n              onChange: e => setTranslate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"translated\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Translated:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: translated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ImageHere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7tzeLU64zCR3nZ7wxLWxwuhP/Bw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","App","_s","API","translate","setTranslate","translated","setTranslated","lang","setLang","toLang","setToLang","translateOptions","value","label","translateText","response","get","params","q","langpair","data","responseData","translatedText","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/justin/Desktop/Translator/translator/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n const API = \"https://api.mymemory.translated.net/get\";\n\n const [translate, setTranslate] = useState(''); // Corrected state declaration\n const [translated, setTranslated] = useState(''); // Corrected state declaration\n\n const {lang, setLang} = useState('');\n const {toLang, setToLang} = useState('');\n\n\n const translateOptions = [\n  { value: '', label: 'option 1'},\n  { value: '', label: 'option 2'},\n  { value: '', label: 'option 3'},\n  { value: '', label: 'option 4'},\n\n ]\n\n\n\n const translateText = async () => {\n  try {\n    const response = await axios.get(API, {\n      params: {\n        q: translate,\n        langpair: 'en|es', // Replace with your desired language pair (e.g., 'en|fr' for English to French)\n      },\n    });\n\n    if (response.data && response.data.responseData) {\n      const translated = response.data.responseData.translatedText;\n      setTranslated(translated);\n    } else {\n      setTranslated('Translation not found');\n    }\n  } catch (error) {\n    console.error('Error translating text:', error);\n    setTranslated('An error occurred');\n  }\n};\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className='mainTranslatorBox'>\n            <div className='translator'>\n              <div className='toTranslate'>\n              <button onClick={translateText}>Translate</button>\n                <h2>Enter your text here:</h2>\n                <input className='textInput' \n                    type=\"text\"\n                    placeholder=\"Enter text to translate\"\n                    value={translate}\n                    onChange={(e) => setTranslate(e.target.value)}/>\n              </div>\n\n              <div className='translated'>\n                  <h2>Translated:</h2>\n                  <p>{translated}</p>\n              </div>\n            </div>\n            <div className='ImageHere'>\n\n            </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}