{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/Translator/translator/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const API = \"https://api.mymemory.translated.net/get\";\n  const [translate, setTranslate] = useState(''); // Corrected state declaration\n  const [translated, setTranslated] = useState(''); // Corrected state declaration\n\n  const {\n    lang,\n    setLang\n  } = useState('');\n  const {\n    toLang,\n    setToLang\n  } = useState('');\n  const translateOptions = [{\n    value: '',\n    label: 'option 1'\n  }];\n  const translatedOptions = [{\n    value: '',\n    label: 'option 1'\n  }];\n  const translateOptionChange = event => {\n    setLang(event.target.value);\n  };\n  const translatedOptionChange = event => {\n    setToLang(event.target.value);\n  };\n  const translateText = async () => {\n    try {\n      const response = await axios.get(API, {\n        params: {\n          q: translate,\n          langpair: lang | lang\n        }\n      });\n      if (response.data && response.data.responseData) {\n        const translated = response.data.responseData.translatedText;\n        setTranslated(translated);\n      } else {\n        setTranslated('Translation not found');\n      }\n    } catch (error) {\n      console.error('Error translating text:', error);\n      setTranslated('An error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainTranslatorBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"translator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toTranslate\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: lang,\n              onChange: translateOptionChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"select an option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), translateOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Enter your text here:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"textInput\",\n              type: \"text\",\n              placeholder: \"Enter text to translate\",\n              value: translate,\n              onChange: e => setTranslate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"translated\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Translated:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: translated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ImageHere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: translateText,\n        children: \"Translate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7tzeLU64zCR3nZ7wxLWxwuhP/Bw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","App","_s","API","translate","setTranslate","translated","setTranslated","lang","setLang","toLang","setToLang","translateOptions","value","label","translatedOptions","translateOptionChange","event","target","translatedOptionChange","translateText","response","get","params","q","langpair","data","responseData","translatedText","error","console","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","option","type","placeholder","e","onClick","_c","$RefreshReg$"],"sources":["/Users/justin/Desktop/Translator/translator/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n const API = \"https://api.mymemory.translated.net/get\";\n\n const [translate, setTranslate] = useState(''); // Corrected state declaration\n const [translated, setTranslated] = useState(''); // Corrected state declaration\n\n const {lang, setLang} = useState('');\n const {toLang, setToLang} = useState('');\n\n\n const translateOptions = [\n  { value: '', label: 'option 1'},\n  \n  \n\n ]\n\n const translatedOptions = [\n  { value: '', label: 'option 1'},\n  \n  \n\n ]\n\n const translateOptionChange = (event) => {\n  setLang(event.target.value)\n }\n\n const translatedOptionChange = (event) => {\n  setToLang(event.target.value)\n }\n\n\n\n const translateText = async () => {\n  try {\n    const response = await axios.get(API, {\n      params: {\n        q: translate,\n        langpair: lang| lang\n      },\n    });\n\n    if (response.data && response.data.responseData) {\n      const translated = response.data.responseData.translatedText;\n      setTranslated(translated);\n    } else {\n      setTranslated('Translation not found');\n    }\n  } catch (error) {\n    console.error('Error translating text:', error);\n    setTranslated('An error occurred');\n  }\n};\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className='mainTranslatorBox'>\n            <div className='translator'>\n              <div className='toTranslate'>\n\n\n              <select value={lang} onChange={translateOptionChange}>\n                <option value=\"\">select an option</option>\n                {translateOptions.map((option) => (\n                  <option key={option.value} value={option.value}>\n                        {option.label}\n                  </option>\n                ))}\n              </select>\n\n\n                <h2>Enter your text here:</h2>\n                <input className='textInput' \n                    type=\"text\"\n                    placeholder=\"Enter text to translate\"\n                    value={translate}\n                    onChange={(e) => setTranslate(e.target.value)}/>\n              </div>\n\n              <div className='translated'>\n                  <h2>Translated:</h2>\n                  <p>{translated}</p>\n              </div>\n            </div>\n            <div className='ImageHere'>\n\n            </div>\n        </div>\n        <button onClick={translateText}>Translate</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}