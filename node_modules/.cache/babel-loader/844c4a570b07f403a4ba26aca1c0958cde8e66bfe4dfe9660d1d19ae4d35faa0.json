{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/Translator/translator/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const API = \"https://api.mymemory.translated.net/get\";\n  const [translate, setTranslate] = useState('');\n  const [translated, setTranslated] = useState('');\n  const [lang, setLang] = useState('');\n  const [toLang, setToLang] = useState('');\n\n  // Define language options using BCP 47 language codes and labels\n  const languageOptions = [{\n    value: 'en',\n    label: 'English'\n  }, {\n    value: 'es',\n    label: 'Spanish'\n  }, {\n    value: 'fr',\n    label: 'French'\n  }, {\n    value: 'de',\n    label: 'German'\n  }\n  // Add more languages as needed\n  ];\n\n  useEffect(() => {\n    // Set default values for lang and toLang initially\n    setLang(languageOptions[0].value);\n    setToLang(languageOptions[0].value);\n  }, [languageOptions]);\n  const translateOptionChange = event => {\n    setLang(event.target.value);\n  };\n  const translatedOptionChange = event => {\n    setToLang(event.target.value);\n  };\n  const translateText = async () => {\n    try {\n      const response = await axios.get(API, {\n        params: {\n          q: translate,\n          langpair: `${lang}|${toLang}`\n        }\n      });\n      if (response.data && response.data.responseData) {\n        const translated = response.data.responseData.translatedText;\n        setTranslated(translated);\n      } else {\n        setTranslated('Translation not found');\n      }\n    } catch (error) {\n      console.error('Error translating text:', error);\n      setTranslated('An error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainTranslatorBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"translator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toTranslate\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: lang,\n              onChange: translateOptionChange,\n              children: languageOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Enter your text here:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"textInput\",\n              type: \"text\",\n              placeholder: \"Enter text to translate\",\n              value: translate,\n              onChange: e => setTranslate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"translated\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Translated:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: toLang,\n              onChange: translatedOptionChange,\n              children: languageOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: translated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ImageHere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: translateText,\n        children: \"Translate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6rWJCHE6bUc33CCEqmG6k/T4wis=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","API","translate","setTranslate","translated","setTranslated","lang","setLang","toLang","setToLang","languageOptions","value","label","translateOptionChange","event","target","translatedOptionChange","translateText","response","get","params","q","langpair","data","responseData","translatedText","error","console","className","children","onChange","map","option","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","e","onClick","_c","$RefreshReg$"],"sources":["/Users/justin/Desktop/Translator/translator/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const API = \"https://api.mymemory.translated.net/get\";\n\n  const [translate, setTranslate] = useState('');\n  const [translated, setTranslated] = useState('');\n  const [lang, setLang] = useState('');\n  const [toLang, setToLang] = useState('');\n\n  // Define language options using BCP 47 language codes and labels\n  const languageOptions = [\n    { value: 'en', label: 'English' },\n    { value: 'es', label: 'Spanish' },\n    { value: 'fr', label: 'French' },\n    { value: 'de', label: 'German' },\n    // Add more languages as needed\n  ];\n\n  useEffect(() => {\n    // Set default values for lang and toLang initially\n    setLang(languageOptions[0].value);\n    setToLang(languageOptions[0].value);\n  }, [languageOptions]);\n\n  const translateOptionChange = (event) => {\n    setLang(event.target.value);\n  }\n\n  const translatedOptionChange = (event) => {\n    setToLang(event.target.value);\n  }\n\n  const translateText = async () => {\n    try {\n      const response = await axios.get(API, {\n        params: {\n          q: translate,\n          langpair: `${lang}|${toLang}`,\n        },\n      });\n\n      if (response.data && response.data.responseData) {\n        const translated = response.data.responseData.translatedText;\n        setTranslated(translated);\n      } else {\n        setTranslated('Translation not found');\n      }\n    } catch (error) {\n      console.error('Error translating text:', error);\n      setTranslated('An error occurred');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className='mainTranslatorBox'>\n          <div className='translator'>\n            <div className='toTranslate'>\n              <select value={lang} onChange={translateOptionChange}>\n                {languageOptions.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n              <h2>Enter your text here:</h2>\n              <input\n                className='textInput'\n                type=\"text\"\n                placeholder=\"Enter text to translate\"\n                value={translate}\n                onChange={(e) => setTranslate(e.target.value)}\n              />\n            </div>\n            <div className='translated'>\n              <h2>Translated:</h2>\n              <select value={toLang} onChange={translatedOptionChange}>\n                {languageOptions.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n              <p>{translated}</p>\n            </div>\n          </div>\n          <div className='ImageHere'></div>\n        </div>\n        <button onClick={translateText}>Translate</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}